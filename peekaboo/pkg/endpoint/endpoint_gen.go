// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	endpoint "github.com/go-kit/kit/endpoint"
	service "worker-peekaboo/peekaboo/pkg/service"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	PikabuEndpoint           endpoint.Endpoint
	RefreshWindowsEndpoint   endpoint.Endpoint
	StartStreamingEndpoint   endpoint.Endpoint
	EndStreamingEndpoint     endpoint.Endpoint
	ChangeQualityEndpoint    endpoint.Endpoint
	ChangeFpsEndpoint        endpoint.Endpoint
	ChangePropertiesEndpoint endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.PeekabooService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		ChangeFpsEndpoint:        MakeChangeFpsEndpoint(s),
		ChangePropertiesEndpoint: MakeChangePropertiesEndpoint(s),
		ChangeQualityEndpoint:    MakeChangeQualityEndpoint(s),
		EndStreamingEndpoint:     MakeEndStreamingEndpoint(s),
		PikabuEndpoint:           MakePikabuEndpoint(s),
		RefreshWindowsEndpoint:   MakeRefreshWindowsEndpoint(s),
		StartStreamingEndpoint:   MakeStartStreamingEndpoint(s),
	}
	for _, m := range mdw["Pikabu"] {
		eps.PikabuEndpoint = m(eps.PikabuEndpoint)
	}
	for _, m := range mdw["RefreshWindows"] {
		eps.RefreshWindowsEndpoint = m(eps.RefreshWindowsEndpoint)
	}
	for _, m := range mdw["StartStreaming"] {
		eps.StartStreamingEndpoint = m(eps.StartStreamingEndpoint)
	}
	for _, m := range mdw["EndStreaming"] {
		eps.EndStreamingEndpoint = m(eps.EndStreamingEndpoint)
	}
	for _, m := range mdw["ChangeQuality"] {
		eps.ChangeQualityEndpoint = m(eps.ChangeQualityEndpoint)
	}
	for _, m := range mdw["ChangeFps"] {
		eps.ChangeFpsEndpoint = m(eps.ChangeFpsEndpoint)
	}
	for _, m := range mdw["ChangeProperties"] {
		eps.ChangePropertiesEndpoint = m(eps.ChangePropertiesEndpoint)
	}
	return eps
}
